"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const cli_ux_1 = require("cli-ux");
const template_scaffolding_1 = require("@terra-money/template-scaffolding");
const path = tslib_1.__importStar(require("path"));
const fs = tslib_1.__importStar(require("fs"));
class CodeNew extends command_1.Command {
    async run() {
        const { args, flags } = this.parse(CodeNew);
        if (fs.existsSync(path.join(flags.path, args.name))) {
            throw Error(`Folder '${args.name}' already exists under path '${flags.path}'.\nTip: Use another path or contract name`);
        }
        cli_ux_1.cli.log(`generating contract ${args.name}:`);
        cli_ux_1.cli.action.start('- contract');
        await template_scaffolding_1.TemplateScaffolding.from({
            remoteUrl: `https://codeload.github.com/InterWasm/cw-template/zip/refs/tags/${flags.version}`,
            subFolder: `cw-template-${flags.version}`,
            localOptions: {
                folderUrl: path.join(process.cwd(), flags.path, args.name),
            },
            replace: {
                entries: {
                    'project-name': args.name,
                    crate_name: args.name,
                    authors: flags.authors,
                    ' "now" | date: "%Y" ': `${new Date().getFullYear()}`,
                },
            },
        });
        cli_ux_1.cli.action.stop();
    }
}
exports.default = CodeNew;
CodeNew.description = 'Generate new contract.';
CodeNew.examples = [
    '$ terrain code:new awesome_contract',
    '$ terrain code:new awesome_contract --path path/to/dapp',
    '$ terrain code:new awesome_contract --path path/to/dapp --authors "ExampleAuthor<example@email.domain>"',
];
CodeNew.flags = {
    path: command_1.flags.string({
        description: 'path to keep the contracts',
        default: './contracts',
    }),
    version: command_1.flags.string({
        default: '1.0-beta6',
    }),
    authors: command_1.flags.string({
        default: 'Terra Money <core@terra.money>',
    }),
};
CodeNew.args = [{ name: 'name', required: true }];
