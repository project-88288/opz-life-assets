"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const cli_ux_1 = require("cli-ux");
const fs = tslib_1.__importStar(require("fs-extra"));
const flag_1 = require("../lib/flag");
class SyncRefs extends command_1.Command {
    async run() {
        const { flags } = this.parse(SyncRefs);
        if (!fs.pathExistsSync(flags.dest)) {
            cli_ux_1.cli.error('destination directory not found, not syncing refs');
        }
        // fs.copyFileSync requires the full path to copy to so lets
        // append "refs.terrain.json" if it doesn't exist.
        const destFullPath = flags.dest.endsWith('refs.terrain.json')
            ? flags.dest
            : `${flags.dest.replace(/\/$/, '')}/refs.terrain.json`;
        cli_ux_1.cli.action.start(`syncing refs from '${flags['refs-path']}' to '${destFullPath}'`);
        fs.copyFileSync(flags['refs-path'], destFullPath);
        cli_ux_1.cli.action.stop();
    }
}
exports.default = SyncRefs;
SyncRefs.description = 'Sync configuration with frontend app.';
SyncRefs.flags = {
    'refs-path': flag_1.refsPath,
    dest: flag_1.frontendRefsPath,
};
