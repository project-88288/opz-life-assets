"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const cli_ux_1 = require("cli-ux");
const fs_extra_1 = tslib_1.__importDefault(require("fs-extra"));
const path = tslib_1.__importStar(require("path"));
const TerrainCLI_1 = tslib_1.__importDefault(require("../../TerrainCLI"));
class TaskNew extends command_1.Command {
    async run() {
        const { args } = this.parse(TaskNew);
        const pathToTasks = path.join(process.cwd(), 'tasks', `${args.task}.ts`);
        if (fs_extra_1.default.existsSync(pathToTasks)) {
            TerrainCLI_1.default.error(`Task with name ${args.task} already exists chose another name for the task`);
            return process.exit();
        }
        cli_ux_1.cli.action.start(`Creating task: ${args.task}`);
        await fs_extra_1.default.writeFile(pathToTasks, `import { Env, task } from "@terra-money/terrain";

task(async (env:Env) => {
  console.log(env);
  console.log("Template")
});`);
        cli_ux_1.cli.action.stop();
        return undefined;
    }
}
exports.default = TaskNew;
TaskNew.description = 'create new task';
TaskNew.args = [{ name: 'task' }];
