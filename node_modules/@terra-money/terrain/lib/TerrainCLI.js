"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const cli_ux_1 = tslib_1.__importDefault(require("cli-ux"));
const boxen_1 = tslib_1.__importDefault(require("boxen"));
const semver_1 = tslib_1.__importDefault(require("semver"));
/** TerrainCLI offers default log styling for terrain commands. */
class TerrainCLI {
    constructor(prefix, logStyle, successStyle, warningStyle, alertStyle, errorStyle, anykeyStyle) {
        this.prefix = prefix;
        this.logStyle = logStyle;
        this.successStyle = successStyle;
        this.warningStyle = warningStyle;
        this.alertStyle = alertStyle;
        this.errorStyle = errorStyle;
        this.anykeyStyle = anykeyStyle;
    }
    // TerrainCLI.log(logMsg) styling.
    log(logMsg = '') {
        cli_ux_1.default.log(`\n${this.prefix} ${this.logStyle(logMsg)}\n`);
    }
    // TerrainCLI.success(successMsg) styling.
    success(successMsg = '') {
        cli_ux_1.default.log(`\n${this.prefix} ${this.successStyle(successMsg)}\n`);
    }
    // TerrainCLI.warning(warningMsg) styling.
    warning(warningMsg = '') {
        cli_ux_1.default.log(`\n${this.prefix} ${this.warningStyle(`Warning: ${warningMsg}`)}\n`);
    }
    // TerrainCLI.alert(alertMsg, title, maxWidth) styling
    alert(alertMsg = '', title = 'Hey! ðŸ‘‹', maxWidth = 36) {
        cli_ux_1.default.log(this.alertStyle(boxen_1.default(alertMsg.replace(new RegExp(`(?![^\\n]{1,${maxWidth}}$)([^\\n]{1,${maxWidth}})\\s`, 'g'), '$1\n'), {
            title, titleAlignment: 'center', padding: 1, margin: 1,
        })));
    }
    // TerrainCLI.error(errorMsg) styling.
    error(errorMsg = '') {
        cli_ux_1.default.log(`\n${this.prefix} ${this.errorStyle(`Error: ${errorMsg}`)}\n`);
    }
    // await TerrainCLI.anykey(anykeyMsg) styling.
    async anykey(anykeyMsg = '') {
        await cli_ux_1.default.anykey(`\n${this.prefix} ${this.anykeyStyle(`${anykeyMsg}`)}`);
    }
    // TerrainCLI.nodeVersionCheck() styling.
    nodeVersionCheck() {
        if (!semver_1.default.satisfies(process.version, '^16')) {
            this.alert(`
Terrain requires Node version 16!\n
Please switch your version of Node before running Terrain commands.\n
If you are utilizing nvm, simply utilize the following command:\n
nvm use 16
      `, 'ðŸš¨ Incompatible Node Version ðŸš¨');
            process.exit();
        }
    }
}
exports.default = new TerrainCLI(chalk_1.default.yellow('>'), chalk_1.default.white, chalk_1.default.green, chalk_1.default.hex('#FFA500'), chalk_1.default.hex('#CB48E8'), chalk_1.default.red, chalk_1.default.cyan);
