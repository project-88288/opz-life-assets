import { AccAddress, LCDClient, Wallet } from '@terra-money/terra.js';
import { ContractConfig } from '../config';
declare type BuildParams = {
    contract: string;
};
export declare const build: ({ contract }: BuildParams) => Promise<void>;
declare type OptimizeParams = {
    contract: string;
    useCargoWorkspace?: boolean;
    network?: string;
};
export declare const optimize: ({ contract, useCargoWorkspace, network, }: OptimizeParams) => Promise<void>;
declare type StoreCodeParams = {
    conf: ContractConfig;
    network: string;
    refsPath: string;
    lcd: LCDClient;
    contract: string;
    noRebuild?: boolean;
    signer: Wallet;
    codeId?: number;
    useCargoWorkspace?: boolean;
};
export declare const storeCode: ({ contract, signer, network, refsPath, lcd, codeId, noRebuild, useCargoWorkspace, }: StoreCodeParams) => Promise<any>;
declare type InstantiateParams = {
    conf: ContractConfig;
    signer: Wallet;
    network: string;
    refsPath: string;
    lcd: LCDClient;
    admin?: AccAddress;
    contract: string;
    codeId?: number;
    instanceId?: string;
    sequence?: number;
};
export declare const instantiate: ({ conf, refsPath, network, lcd, signer, admin, contract, codeId, instanceId, sequence, }: InstantiateParams) => Promise<string>;
declare type MigrateParams = {
    conf: ContractConfig;
    signer: Wallet;
    contract: string;
    codeId: number;
    network: string;
    instanceId: string;
    refsPath: string;
    lcd: LCDClient;
};
export declare const migrate: ({ conf, refsPath, lcd, signer, contract, codeId, network, instanceId, }: MigrateParams) => Promise<void>;
export {};
